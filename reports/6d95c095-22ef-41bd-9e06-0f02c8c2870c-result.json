{"name": "test_active_all", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.has the ```return ($._data($(\"#clear-completed\").get(0), \"events\").hasOwnProperty(\"click\") && (Object.keys(require.s.contexts._.defined).length === 39))``` script returned True\n\nReason: AssertionError: actual script_result: False\nScreenshot: file:///home/vlad/.selene/screenshots/1668766391669/1668766391670.png\nPageSource: file:///home/vlad/.selene/screenshots/1668766391669/1668766391670.html", "trace": "self = <selene.core.wait.Wait object at 0x7f44725744c0>\nfn = <selene.core.conditions.BrowserCondition object at 0x7f4472574f10>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\n../../.cache/pypoetry/virtualenvs/codarium-course-J6QylXrB-py3.8/lib/python3.8/site-packages/selene/core/wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.conditions.BrowserCondition object at 0x7f4472574f10>\nentity = <selene.support.shared.browser.SharedBrowser object at 0x7f44730977c0>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\n../../.cache/pypoetry/virtualenvs/codarium-course-J6QylXrB-py3.8/lib/python3.8/site-packages/selene/core/condition.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nentity = <selene.support.shared.browser.SharedBrowser object at 0x7f44730977c0>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual script_result: False\n\n../../.cache/pypoetry/virtualenvs/codarium-course-J6QylXrB-py3.8/lib/python3.8/site-packages/selene/core/condition.py:124: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_active_all():\n>       todos.given_opened('a', 'b', 'c')\n\ntodomvc_test/tests/test_operations_at_all_filters.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntodomvc_test/model/pages/todomwc.py:20: in given_opened\n    self.visit()\ntodomvc_test/model/pages/todomwc.py:11: in visit\n    self.browser.open('http://todomvc4tasj.herokuapp.com/') \\\n../../.cache/pypoetry/virtualenvs/codarium-course-J6QylXrB-py3.8/lib/python3.8/site-packages/selene/core/entity.py:1634: in should\n    super().should(condition)\n../../.cache/pypoetry/virtualenvs/codarium-course-J6QylXrB-py3.8/lib/python3.8/site-packages/selene/core/entity.py:126: in should\n    self.wait.for_(condition)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.wait.Wait object at 0x7f44725744c0>\nfn = <selene.core.conditions.BrowserCondition object at 0x7f4472574f10>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 4s, while waiting for:\nE                       browser.has the ```return ($._data($(\"#clear-completed\").get(0), \"events\").hasOwnProperty(\"click\") && (Object.keys(require.s.contexts._.defined).length === 39))``` script returned True\nE                       \nE                       Reason: AssertionError: actual script_result: False\nE                       Screenshot: file:///home/vlad/.selene/screenshots/1668766391669/1668766391670.png\nE                       PageSource: file:///home/vlad/.selene/screenshots/1668766391669/1668766391670.html\n\n../../.cache/pypoetry/virtualenvs/codarium-course-J6QylXrB-py3.8/lib/python3.8/site-packages/selene/core/wait.py:125: TimeoutException"}, "attachments": [{"name": "log", "source": "db75c5ff-0fca-423e-93f0-f8eae402d7ca-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "7cc8454d-b78c-4656-aff0-c2ea1fe5de7d-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "2be8d1b1-9a2b-45ea-acf7-b81a773b1712-attachment.txt", "type": "text/plain"}], "start": 1668766459863, "stop": 1668766470607, "uuid": "daa1817e-153e-4760-aca8-85e2f3283055", "historyId": "018ccbde9e581b553c819df86d684fe1", "testCaseId": "4606f9ac69c04d000e5c9073d32bd96f", "fullName": "todomvc_test.tests.test_operations_at_all_filters#test_active_all", "labels": [{"name": "parentSuite", "value": "todomvc_test.tests"}, {"name": "suite", "value": "test_operations_at_all_filters"}, {"name": "host", "value": "vlad-X550LD"}, {"name": "thread", "value": "18064-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "todomvc_test.tests.test_operations_at_all_filters"}]}